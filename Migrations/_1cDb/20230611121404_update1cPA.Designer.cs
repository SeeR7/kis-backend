// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServerApp.Data;

#nullable disable

namespace ServerApp.Migrations._1cDb
{
    [DbContext(typeof(_1cDbContext))]
    [Migration("20230611121404_update1cPA")]
    partial class update1cPA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServerApp.Models._1C_DB.DSE", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateVydachi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DseCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FactMechDepDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FactProdDepDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PlanSdachi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PlanTrebDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlanZapuska")
                        .HasColumnType("integer");

                    b.Property<int?>("QuantityMechDep")
                        .HasColumnType("integer");

                    b.Property<int?>("QuantityProdDep")
                        .HasColumnType("integer");

                    b.Property<string>("SerialGroup")
                        .HasColumnType("text");

                    b.Property<string>("StockAvail")
                        .HasColumnType("text");

                    b.Property<int?>("Vydano")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DSE");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Consumer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SrokDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.ProjectAgregat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AgregatId")
                        .HasColumnType("bigint");

                    b.Property<string>("AgregatName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KolvoIzdIsp")
                        .HasColumnType("integer");

                    b.Property<int>("KolvoIzdOtg")
                        .HasColumnType("integer");

                    b.Property<int>("KolvoUstPart")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAgregat");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.RNO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("text");

                    b.Property<string>("DocumentURL")
                        .HasColumnType("text");

                    b.Property<long>("DseId")
                        .HasColumnType("bigint");

                    b.Property<string>("FactMaterial")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SchemeMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrebMaterial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VpDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DseId");

                    b.ToTable("RNO");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.VydachaTrebov", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DseId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaterialZam")
                        .HasColumnType("text");

                    b.Property<int>("NumberTreb")
                        .HasColumnType("integer");

                    b.Property<int>("Treb")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TrebDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Vydano")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("VydanoDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DseId");

                    b.ToTable("VydachaTrebov");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.ProjectAgregat", b =>
                {
                    b.HasOne("ServerApp.Models._1C_DB.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.RNO", b =>
                {
                    b.HasOne("ServerApp.Models._1C_DB.DSE", "DSE")
                        .WithMany()
                        .HasForeignKey("DseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DSE");
                });

            modelBuilder.Entity("ServerApp.Models._1C_DB.VydachaTrebov", b =>
                {
                    b.HasOne("ServerApp.Models._1C_DB.DSE", "DSE")
                        .WithMany()
                        .HasForeignKey("DseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DSE");
                });
#pragma warning restore 612, 618
        }
    }
}
